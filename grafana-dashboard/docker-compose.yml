services:
  grafana:
    image: grafana/grafana:10.4.5
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
      # - loki
    networks: [monitoring]

  prometheus:
    image: prom/prometheus:v2.54.1
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.retention.time=2d
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks: [monitoring]

  # 호스트/컨테이너 리소스 메트릭
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks: [monitoring]

  # 호스트 메트릭(옵션: Docker Desktop에선 권한 이슈 있으면 생략 가능)
  node-exporter:
    image: quay.io/prometheus/node-exporter:v1.8.2
    ports:
      - "9100:9100"
    pid: host
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --path.rootfs=/rootfs
    networks: [monitoring]

  # (Optional) Loki
  # loki:
  #   image: grafana/loki:2.9.8
  #   command: -config.file=/etc/loki/local-config.yaml
  #   ports:
  #     - "3100:3100"
  #   networks: [monitoring]

networks:
  monitoring: